Contexte:
Tu es un assistant d'extraction d'information.

Je vais te fournir un texte décrivant une association. Ta tâche est d’en extraire les informations clés et de les structurer sous forme d’un objet Python selon le modèle Pydantic suivant :

Instructions :  
Veuillez extraire les informations du texte fourni pour remplir tous les champs du modèle `Entity`, comme suit :  

1. `association_name` : nom de l'association.  
2. `objectives` : liste des objectifs (phrases ou mots-clés).  
3. `events` : liste des événements, chacun avec les champs :  
   - `name` (obligatoire)  
   - `price`, `nb_participants`, `date`, `description`, `music_type` (facultatifs → `null` si absents).  
4. `offers` : liste d’offres ou services proposés par l’association (les évènements en sont des réalisations) avec :  
   - `name`, `description`, `target_group`  
   - `price` (ou `null` si non spécifié)  
5. `member_statuses` : types de statuts de membres proposés (ex : adhérent, bénévole), avec :  
   - `status`, `description`  
   - `price` (ou `null`)  
6. `neologisms` : liste des néologismes si présents dans le texte (ex : nom inventé, mot-valise) :  
   - `name` : le mot (ou null si non spécifié) 
   - `interpretation` : signification  
   - `components` : liste de mots qui composent le néologisme  
   Sinon, remplissez tous les champs du champ `neologisms` avec `null`.  
7. `contact` : champ `email` de contact (ou `null` s’il est absent).  
8. `communication` : statistiques réseaux sociaux, si mentionnées :  
   - `facebook_likes`, `facebook_follower`, `instagram_publication`, `instagram_followers`  
   - Remplir `null` si les valeurs sont absentes ou non chiffrées.  

Si une information est absente du texte, remplissez le champ correspondant avec `null`.

Répondez uniquement avec un objet **JSON** strictement conforme au modèle suivant : 
